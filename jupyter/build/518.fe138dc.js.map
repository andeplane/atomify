{"version":3,"file":"518.fe138dc.js","mappings":"yLAYO,MAAMA,EAITC,YAAYC,GACRC,KAAKC,aAAe,IAAI,EAAAC,gBACxBF,KAAKG,cAAe,EACpBH,KAAKI,KAAOL,EAAQM,IACpBL,KAAKM,QAAUP,EAAQQ,MAC3B,CASAC,QAAQC,GACCT,KAAKG,cACNH,KAAKU,QAEJV,KAAKC,aAAaU,QAAQC,MAAK,KAChCC,QAAQC,IAAIC,MAAM,CAAC,UAAWF,QAAQC,IAAKL,IAC3C,IACII,QAAQC,IAAIC,MAAM,CAAC,UAAWF,QAAQG,KAAM,wCAAwC,KAChFH,QAAQI,SAASC,IAAIC,sBAAsB,GAKnD,CAFA,MAAOC,GACHC,QAAQC,MAAM,uCAAwCF,EAC1D,IAER,CAIAV,QACI,MAAMa,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,EAASF,SAASG,cAAc,UACtCD,EAAOE,KAAO,kBACdF,EAAOG,IAAM,GAAG7B,KAAKI,eAAeJ,KAAKM,2CACzCoB,EAAOI,QAAU,QACjBP,EAAKQ,YAAYL,GACjBA,EAAOM,iBAAiB,QAAQ,KAC5BhC,KAAKiC,SAAS,IAElBjC,KAAKG,cAAe,CACxB,CAIA8B,UACIpB,QAAQC,IAAIoB,OAAO,CACfC,QAAS,CACLC,WAAY,CACR,CAAC,IAAK,KACN,CAAC,MAAO,QAEZC,YAAa,CACT,CAAC,KAAM,MACP,CAAC,MAAO,QAEZC,gBAAgB,EAChBC,qBAAqB,GAIzBC,aAAc,SACdC,WAAY,CACRC,WAAY,CAAEC,WAAW,IAE7B,WAAY,CACRC,eAAgB,GAChBC,UAAW,KACXC,cAAe,KACfC,QAAS,WACTC,OAAQ,CAAE,mBAAoB,CAAEC,OAAQ,IACxCP,WAAY,CAAEC,WAAW,IAE7BO,oBAAoB,EACpBC,aAAc,SAElBtC,QAAQC,IAAIsC,SAASC,YAAY,cAAc,KAC3C,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAK+G,QAAtIH,EAAkF,QAA5ED,EAA4B,QAAtBD,EAAKzC,QAAQC,WAAwB,IAAPwC,OAAgB,EAASA,EAAG/C,cAA2B,IAAPgD,OAAgB,EAASA,EAAGK,kBAA+B,IAAPJ,UAA8BA,EAAGR,OAAO,mCAClD,QAApIW,EAAkF,QAA5ED,EAA4B,QAAtBD,EAAK5C,QAAQC,WAAwB,IAAP2C,OAAgB,EAASA,EAAGlD,cAA2B,IAAPmD,OAAgB,EAASA,EAAGG,gBAA6B,IAAPF,UAA8BA,EAAGX,OAAO,gCAAgC,IAEzNnC,QAAQC,IAAIgD,aACZ9D,KAAKC,aAAa8D,aAAQ,EAC9B,E","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mathjax2/lib/index.js"],"sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module mathjax2\n */\nimport { PromiseDelegate } from '@lumino/coreutils';\n/**\n * The MathJax Typesetter.\n */\nexport class MathJaxTypesetter {\n    /**\n     * Create a new MathJax typesetter.\n     */\n    constructor(options) {\n        this._initPromise = new PromiseDelegate();\n        this._initialized = false;\n        this._url = options.url;\n        this._config = options.config;\n    }\n    /**\n     * Typeset the math in a node.\n     *\n     * #### Notes\n     * MathJax schedules the typesetting asynchronously,\n     * but there are not currently any callbacks or Promises\n     * firing when it is done.\n     */\n    typeset(node) {\n        if (!this._initialized) {\n            this._init();\n        }\n        void this._initPromise.promise.then(() => {\n            MathJax.Hub.Queue(['Typeset', MathJax.Hub, node]);\n            try {\n                MathJax.Hub.Queue(['Require', MathJax.Ajax, '[MathJax]/extensions/TeX/AMSmath.js'], () => {\n                    MathJax.InputJax.TeX.resetEquationNumbers();\n                });\n            }\n            catch (e) {\n                console.error('Error queueing resetEquationNumbers:', e);\n            }\n        });\n    }\n    /**\n     * Initialize MathJax.\n     */\n    _init() {\n        const head = document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = `${this._url}?config=${this._config}&amp;delayStartupUntil=configured`;\n        script.charset = 'utf-8';\n        head.appendChild(script);\n        script.addEventListener('load', () => {\n            this._onLoad();\n        });\n        this._initialized = true;\n    }\n    /**\n     * Handle MathJax loading.\n     */\n    _onLoad() {\n        MathJax.Hub.Config({\n            tex2jax: {\n                inlineMath: [\n                    ['$', '$'],\n                    ['\\\\(', '\\\\)']\n                ],\n                displayMath: [\n                    ['$$', '$$'],\n                    ['\\\\[', '\\\\]']\n                ],\n                processEscapes: true,\n                processEnvironments: true\n            },\n            // Center justify equations in code and markdown cells. Elsewhere\n            // we use CSS to left justify single line equations in code cells.\n            displayAlign: 'center',\n            CommonHTML: {\n                linebreaks: { automatic: true }\n            },\n            'HTML-CSS': {\n                availableFonts: [],\n                imageFont: null,\n                preferredFont: null,\n                webFont: 'STIX-Web',\n                styles: { '.MathJax_Display': { margin: 0 } },\n                linebreaks: { automatic: true }\n            },\n            skipStartupTypeset: true,\n            messageStyle: 'none'\n        });\n        MathJax.Hub.Register.StartupHook('End Config', () => {\n            var _a, _b, _c, _d, _e, _f;\n            // Disable `:hover span` styles which cause performance issues in Chromium browsers\n            // c-f https://github.com/jupyterlab/jupyterlab/issues/9757\n            // Note that we cannot overwrite them in config earlier due to how `CombineConfig`\n            // is implemented in MathJax 2 (it does not allow removing styles, just expanding).\n            (_c = (_b = (_a = MathJax.Hub) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.MathEvents) === null || _c === void 0 ? true : delete _c.styles['.MathJax_Hover_Arrow:hover span'];\n            (_f = (_e = (_d = MathJax.Hub) === null || _d === void 0 ? void 0 : _d.config) === null || _e === void 0 ? void 0 : _e.MathMenu) === null || _f === void 0 ? true : delete _f.styles['.MathJax_MenuClose:hover span'];\n        });\n        MathJax.Hub.Configured();\n        this._initPromise.resolve(void 0);\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["MathJaxTypesetter","constructor","options","this","_initPromise","PromiseDelegate","_initialized","_url","url","_config","config","typeset","node","_init","promise","then","MathJax","Hub","Queue","Ajax","InputJax","TeX","resetEquationNumbers","e","console","error","head","document","getElementsByTagName","script","createElement","type","src","charset","appendChild","addEventListener","_onLoad","Config","tex2jax","inlineMath","displayMath","processEscapes","processEnvironments","displayAlign","CommonHTML","linebreaks","automatic","availableFonts","imageFont","preferredFont","webFont","styles","margin","skipStartupTypeset","messageStyle","Register","StartupHook","_a","_b","_c","_d","_e","_f","MathEvents","MathMenu","Configured","resolve"],"sourceRoot":""}
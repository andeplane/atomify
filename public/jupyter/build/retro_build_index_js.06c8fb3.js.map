{"version":3,"file":"retro_build_index_js.06c8fb3.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;;AAEwD;;AAExD;AACmD;;AAEnD,mBAAO,CAAC,sBAAY;;AAEpB;AACA,EAAE,8PAAkD;AACpD,EAAE,2PAA+C;AACjD,EAAE,wOAAuC;AACzC;;AAEA;AACA,EAAE,wOAAuC;AACzC,EAAE,iPAA0C;AAC5C,EAAE,+NAAoC;AACtC,EAAE,kOAAqC;AACvC;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,sDAAsD,QAAQ,UAAU,OAAO;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA,IAAI,mBAAO,CAAC,+CAAoC;AAChD,IAAI,mBAAO,CAAC,oDAA0C;AACtD;AACA;AACA,IAAI,qFAAyD;AAC7D,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA,IAAI,mBAAO,CAAC,qCAA0B;AACtC,IAAI,mBAAO,CAAC,yCAA8B;;AAE1C;AACA,IAAI,sFAA2D,IAAI,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oFAAwD,IAAI,IAAI;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sFAA0D,IAAI,IAAI;AACtE;AACA;AACA;AACA;AACA;AACA,IAAI,oFAAyD,IAAI,IAAI;AACrE;AACA;AACA,IAAI,mBAAO,CAAC,0CAA+B;AAC3C,IAAI,sFAA0D,IAAI,IAAI;AACtE;AACA;AACA;AACA;AACA;AACA,IAAI,uFAA2D,IAAI,IAAI;AACvE;AACA;AACA;AACA;AACA,IAAI,mBAAO,CAAC,2CAAgC;AAC5C,IAAI,mBAAO,CAAC,2CAAgC;AAC5C,IAAI,mFAAwD,IAAI,IAAI;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAO,CAAC,6CAAkC;AAC9C,IAAI,mBAAO,CAAC,4CAAiC;AAC7C,IAAI,mBAAO,CAAC,8CAAmC;AAC/C,IAAI,mBAAO,CAAC,6CAAkC;AAC9C,IAAI,mBAAO,CAAC,8CAAmC;AAC/C;;AAEA;AACA;AACA,eAAe,uEAAoB;AACnC;AACA;AACA;AACA,QAAQ,uFAA2D,IAAI,IAAI;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8EAAkD;AAC1D,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mBAAO,CAAC,+CAAoC;AACpD,QAAQ,oFAAyD,IAAI,IAAI;AACzE;AACA;AACA,QAAQ,mFAAuD,IAAI,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oFAAyD,IAAI,IAAI;AACzE;AACA;AACA,QAAQ,mFAAuD,IAAI,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oFAAyD,IAAI,IAAI;AACzE;AACA;AACA,QAAQ,sFAA0D,IAAI,IAAI;AAC1E;AACA;AACA,QAAQ,uFAA2D,IAAI,IAAI;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,uEAAoB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,UAAU,kFAA+B;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA,gCAAgC,kEAAiB,GAAG;AACpD;AACA;AACA;;AAEA;AACA,UAAU,iBAAiB;;AAE3B;AACA,UAAU,WAAW,EAAE,mBAAO,CAAC,kCAAuB;AACtD,6BAA6B,gCAAgC;;AAE7D,aAAa,uEAAoB;;AAEjC;;AAEA;AACA;AACA,KAAK,uEAAoB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvTA;AACA;;AAE0D;AACH;AACI;AACF;AACD;AACF;AACG;AACC;AACD;AACA;AACN;AACI;AACA;AACA;AACE;AACD;AACF;AACI;AACN;AACO;AACL;AACW;AACA;AACX;AACE;AACD;AACN;AACI;AACJ;;;;;;;;;;;;;;;;;;;AC/BjD;AACgH;AACjB;AAC/F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA,0TAA0T,2HAA2H,uTAAuT;AAC5uB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNvC,MAAqG;AACrG,MAA2F;AAC3F,MAAkG;AAClG,MAAqH;AACrH,MAA8G;AAC9G,MAA8G;AAC9G,MAAwG;AACxG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,qFAAO;;;;AAIkD;AAC1E,OAAO,iEAAe,qFAAO,IAAI,4FAAc,GAAG,4FAAc,YAAY,EAAC;;;;;;;;;;;;;AC1B7E;AACA;AACA;AACA;;AAEoB","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/./retro/build/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/./retro/build/style.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/retro-application-extension/style/base.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/retro-application-extension/style/base.css?bd44","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/retro-application-extension/style/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JupyterLiteServer } from '@jupyterlite/server';\n\n// The webpack public path needs to be set before loading the CSS assets.\nimport { PageConfig } from '@jupyterlab/coreutils';\n\nrequire('./style.js');\n\nconst serverExtensions = [\n  import('@jupyterlite/javascript-kernel-extension'),\n  import('@jupyterlite/pyolite-kernel-extension'),\n  import('@jupyterlite/server-extension')\n];\n\nconst mimeExtensionsMods = [\n  import('@jupyterlite/iframe-extension'),\n  import('@jupyterlab/javascript-extension'),\n  import('@jupyterlab/json-extension'),\n  import('@jupyterlab/vega5-extension')\n];\n\nasync function createModule(scope, module) {\n  try {\n    const factory = await window._JUPYTERLAB[scope].get(module);\n    return factory();\n  } catch (e) {\n    console.warn(`Failed to create module: package: ${scope}; module: ${module}`);\n    throw e;\n  }\n}\n\n/**\n * The main entry point for the application.\n */\nexport async function main() {\n  const mimeExtensions = await Promise.all(mimeExtensionsMods);\n\n  let baseMods = [\n    // @jupyterlite plugins\n    require('@jupyterlite/application-extension'),\n    require('@jupyterlite/retro-application-extension'),\n    // @retrolab plugins\n    // do not enable the document opener from RetroLab\n    require('@retrolab/application-extension').default.filter(\n      ({ id }) => ![\n        '@retrolab/application-extension:logo',\n        '@retrolab/application-extension:opener'\n      ].includes(id)\n    ),\n    require('@retrolab/help-extension'),\n    require('@retrolab/notebook-extension'),\n\n    // @jupyterlab plugins\n    require('@jupyterlab/application-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/application-extension:commands',\n        '@jupyterlab/application-extension:context-menu',\n        '@jupyterlab/application-extension:faviconbusy'\n      ].includes(id)\n    ),\n    require('@jupyterlab/apputils-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/apputils-extension:palette',\n        '@jupyterlab/apputils-extension:settings',\n        '@jupyterlab/apputils-extension:state',\n        '@jupyterlab/apputils-extension:themes',\n        '@jupyterlab/apputils-extension:themes-palette-menu',\n        '@jupyterlab/apputils-extension:toolbar-registry'\n      ].includes(id)\n    ),\n    require('@jupyterlab/codemirror-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/codemirror-extension:services',\n        '@jupyterlab/codemirror-extension:codemirror'\n      ].includes(id)\n    ),\n    require('@jupyterlab/completer-extension').default.filter(({ id }) =>\n      ['@jupyterlab/completer-extension:manager'].includes(id)\n    ),\n    require('@jupyterlab/console-extension'),\n    require('@jupyterlab/docmanager-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/docmanager-extension:plugin',\n        '@jupyterlab/docmanager-extension:manager'\n      ].includes(id)\n    ),\n    require('@jupyterlab/filebrowser-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/filebrowser-extension:factory'\n      ].includes(id)\n    ),\n    require('@jupyterlab/mainmenu-extension'),\n    require('@jupyterlab/mathjax2-extension'),\n    require('@jupyterlab/notebook-extension').default.filter(({ id }) =>\n      [\n        '@jupyterlab/notebook-extension:factory',\n        '@jupyterlab/notebook-extension:tracker',\n        '@jupyterlab/notebook-extension:widget-factory'\n      ].includes(id)\n    ),\n    require('@jupyterlab/rendermime-extension'),\n    require('@jupyterlab/shortcuts-extension'),\n    require('@jupyterlab/theme-light-extension'),\n    require('@jupyterlab/theme-dark-extension'),\n    require('@jupyterlab/translation-extension')\n  ];\n\n  // The motivation here is to only load a specific set of plugins dependending on\n  // the current page\n  const page = PageConfig.getOption('retroPage');\n  switch (page) {\n    case 'tree': {\n      baseMods = baseMods.concat([\n        require('@jupyterlab/filebrowser-extension').default.filter(({ id }) =>\n          [\n            '@jupyterlab/filebrowser-extension:browser',\n            '@jupyterlab/filebrowser-extension:file-upload-status',\n            '@jupyterlab/filebrowser-extension:open-with',\n          ].includes(id)\n        ),\n        // do not enable the new terminal button from RetroLab\n        require('@retrolab/tree-extension').default.filter(\n          ({ id }) => id !== '@retrolab/tree-extension:new-terminal'\n        )\n      ]);\n      break;\n    }\n    case 'notebooks': {\n      baseMods = baseMods.concat([\n        require('@jupyterlab/cell-toolbar-extension'),\n        require('@jupyterlab/completer-extension').default.filter(({ id }) =>\n          ['@jupyterlab/completer-extension:notebooks'].includes(id)\n        ),\n        require('@jupyterlab/tooltip-extension').default.filter(({ id }) =>\n          [\n            '@jupyterlab/tooltip-extension:manager',\n            '@jupyterlab/tooltip-extension:notebooks'\n          ].includes(id)\n        )\n      ]);\n      break;\n    }\n    case 'consoles': {\n      baseMods = baseMods.concat([\n        require('@jupyterlab/completer-extension').default.filter(({ id }) =>\n          ['@jupyterlab/completer-extension:consoles'].includes(id)\n        ),\n        require('@jupyterlab/tooltip-extension').default.filter(({ id }) =>\n          [\n            '@jupyterlab/tooltip-extension:manager',\n            '@jupyterlab/tooltip-extension:consoles'\n          ].includes(id)\n        )\n      ]);\n      break;\n    }\n    case 'edit': {\n      baseMods = baseMods.concat([\n        require('@jupyterlab/completer-extension').default.filter(({ id }) =>\n          ['@jupyterlab/completer-extension:files'].includes(id)\n        ),\n        require('@jupyterlab/fileeditor-extension').default.filter(({ id }) =>\n          ['@jupyterlab/fileeditor-extension:plugin'].includes(id)\n        ),\n        require('@jupyterlab/filebrowser-extension').default.filter(({ id }) =>\n          [\n            '@jupyterlab/filebrowser-extension:browser'\n          ].includes(id)\n        ),\n      ]);\n      break;\n    }\n  }\n\n  const mods = [];\n  const federatedExtensionPromises = [];\n  const federatedMimeExtensionPromises = [];\n  const federatedStylePromises = [];\n  const litePluginsToRegister = [];\n  const liteExtensionPromises = [];\n\n  // This is all the data needed to load and activate plugins. This should be\n  // gathered by the server and put onto the initial page template.\n  const extensions = JSON.parse(\n    PageConfig.getOption('federated_extensions')\n  );\n\n  // The set of federated extension names.\n  const federatedExtensionNames = new Set();\n\n  extensions.forEach(data => {\n    if (data.liteExtension) {\n      liteExtensionPromises.push(createModule(data.name, data.extension));\n      return;\n    }\n    if (data.extension) {\n      federatedExtensionNames.add(data.name);\n      federatedExtensionPromises.push(createModule(data.name, data.extension));\n    }\n    if (data.mimeExtension) {\n      federatedExtensionNames.add(data.name);\n      federatedMimeExtensionPromises.push(createModule(data.name, data.mimeExtension));\n    }\n    if (data.style) {\n      federatedStylePromises.push(createModule(data.name, data.style));\n    }\n  });\n\n  /**\n   * Iterate over active plugins in an extension.\n   */\n  function* activePlugins(extension) {\n    // Handle commonjs or es2015 modules\n    let exports;\n    if (extension.hasOwnProperty('__esModule')) {\n      exports = extension.default;\n    } else {\n      // CommonJS exports.\n      exports = extension;\n    }\n\n    let plugins = Array.isArray(exports) ? exports : [exports];\n    for (let plugin of plugins) {\n      if (PageConfig.Extension.isDisabled(plugin.id)) {\n        continue;\n      }\n      yield plugin;\n    }\n  }\n\n  // Add the base frontend extensions\n  const baseFrontendMods = await Promise.all(baseMods);\n  baseFrontendMods.forEach(p => {\n    for (let plugin of activePlugins(p)) {\n      mods.push(plugin);\n    }\n  });\n\n  // Add the federated mime extensions.\n  const federatedMimeExtensions = await Promise.allSettled(federatedMimeExtensionPromises);\n  federatedMimeExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        mimeExtensions.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  // Add the federated extensions.\n  const federatedExtensions = await Promise.allSettled(federatedExtensionPromises);\n  federatedExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        mods.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  // Add the base serverlite extensions\n  const baseServerExtensions = await Promise.all(serverExtensions);\n  baseServerExtensions.forEach(p => {\n    for (let plugin of activePlugins(p)) {\n      litePluginsToRegister.push(plugin);\n    }\n  });\n\n  // Add the serverlite federated extensions.\n  const federatedLiteExtensions = await Promise.allSettled(liteExtensionPromises);\n  federatedLiteExtensions.forEach(p => {\n    if (p.status === \"fulfilled\") {\n      for (let plugin of activePlugins(p.value)) {\n        litePluginsToRegister.push(plugin);\n      }\n    } else {\n      console.error(p.reason);\n    }\n  });\n\n  // create the in-browser JupyterLite Server\n  const jupyterLiteServer = new JupyterLiteServer({});\n  jupyterLiteServer.registerPluginModules(litePluginsToRegister);\n  // start the server\n  await jupyterLiteServer.start();\n\n  // retrieve the custom service manager from the server app\n  const { serviceManager } = jupyterLiteServer;\n\n  // create a RetroLab frontend\n  const { RetroApp } = require('@retrolab/application');\n  const app = new RetroApp({ serviceManager, mimeExtensions });\n\n  app.name = PageConfig.getOption('appName') || 'RetroLite';\n\n  app.registerPluginModules(mods);\n\n  // Expose global app instance when in dev mode or when toggled explicitly.\n  const exposeAppInBrowser =\n    (PageConfig.getOption('exposeAppInBrowser') || '').toLowerCase() === 'true';\n\n  if (exposeAppInBrowser) {\n    window.jupyterapp = app;\n  }\n\n  await app.start();\n  await app.restored;\n}\n","/* This is a generated file of CSS imports */\n/* It was generated by @jupyterlab/builder in Build.ensureAssets() */\n\nimport '@jupyterlab/application-extension/style/index.js';\nimport '@jupyterlab/apputils-extension/style/index.js';\nimport '@jupyterlab/cell-toolbar-extension/style/index.js';\nimport '@jupyterlab/codemirror-extension/style/index.js';\nimport '@jupyterlab/completer-extension/style/index.js';\nimport '@jupyterlab/console-extension/style/index.js';\nimport '@jupyterlab/docmanager-extension/style/index.js';\nimport '@jupyterlab/filebrowser-extension/style/index.js';\nimport '@jupyterlab/fileeditor-extension/style/index.js';\nimport '@jupyterlab/javascript-extension/style/index.js';\nimport '@jupyterlab/json-extension/style/index.js';\nimport '@jupyterlab/mainmenu-extension/style/index.js';\nimport '@jupyterlab/mathjax2-extension/style/index.js';\nimport '@jupyterlab/notebook-extension/style/index.js';\nimport '@jupyterlab/rendermime-extension/style/index.js';\nimport '@jupyterlab/shortcuts-extension/style/index.js';\nimport '@jupyterlab/tooltip-extension/style/index.js';\nimport '@jupyterlab/translation-extension/style/index.js';\nimport '@jupyterlab/vega5-extension/style/index.js';\nimport '@jupyterlite/application-extension/style/index.js';\nimport '@jupyterlite/iframe-extension/style/index.js';\nimport '@jupyterlite/javascript-kernel-extension/style/index.js';\nimport '@jupyterlite/retro-application-extension/style/index.js';\nimport '@jupyterlite/server-extension/style/index.js';\nimport '@retrolab/application-extension/style/index.js';\nimport '@retrolab/docmanager-extension/style/index.js';\nimport '@retrolab/help-extension/style/index.js';\nimport '@retrolab/notebook-extension/style/index.js';\nimport '@retrolab/tree-extension/style/index.js';\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../packages/retro-application-extension/style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;8EAG8E\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./base.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./base.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport './base.css';\n"],"names":[],"sourceRoot":""}
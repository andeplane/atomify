{"version":3,"file":"vendors-node_modules_codemirror_theme_abbott_css.6cc484f.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACgG;AACjB;AAC/E,8BAA8B,sEAA2B,CAAC,+EAAqC;AAC/F;AACA,yjCAAyjC,qCAAqC,2CAA2C,GAAG,uFAAuF,qCAAqC,iBAAiB,GAAG,wCAAwC,sCAAsC,4CAA4C,gCAAgC,wGAAwG,gCAAgC,sPAAsP,oCAAoC,8FAA8F,yCAAyC,iJAAiJ,0QAA0Q,GAAG,kDAAkD,gJAAgJ,GAAG,oHAAoH,sDAAsD,sBAAsB,gBAAgB,GAAG,iGAAiG,8CAA8C,GAAG,+IAA+I,yCAAyC,GAAG,uJAAuJ,yCAAyC,GAAG,sKAAsK,yCAAyC,GAAG,gFAAgF,qCAAqC,yEAAyE,uDAAuD,2CAA2C,GAAG,sHAAsH,kCAAkC,uBAAuB,GAAG,0GAA0G,kCAAkC,GAAG,kHAAkH,gCAAgC,4FAA4F,qCAAqC,0EAA0E,qCAAqC,iHAAiH,uCAAuC,GAAG,4EAA4E,oBAAoB,uLAAuL,yCAAyC,GAAG,sJAAsJ,yCAAyC,GAAG,uEAAuE,oCAAoC,4EAA4E,iCAAiC,sBAAsB,GAAG,0EAA0E,mCAAmC,kGAAkG,iCAAiC,sBAAsB,GAAG,gGAAgG,oCAAoC,+GAA+G,iCAAiC,sBAAsB,GAAG,iGAAiG,mCAAmC,qFAAqF,gCAAgC,iFAAiF,sCAAsC,gCAAgC,GAAG,+EAA+E,yCAAyC,gCAAgC,sBAAsB,GAAG,wEAAwE,sCAAsC,gCAAgC,GAAG,sHAAsH,+CAA+C,2CAA2C,sBAAsB,GAAG,wQAAwQ,iDAAiD,2CAA2C,GAAG,4EAA4E,0CAA0C,GAAG,8IAA8I,wCAAwC,GAAG,sHAAsH,2CAA2C,sBAAsB,GAAG,0FAA0F,kCAAkC,sBAAsB,GAAG,SAAS,qJAAqJ,OAAO,aAAa,aAAa,MAAM,YAAY,aAAa,OAAO,YAAY,MAAM,YAAY,WAAW,KAAK,yBAAyB,0BAA0B,aAAa,0BAA0B,SAAS,KAAK,yBAAyB,aAAa,0BAA0B,aAAa,OAAO,QAAQ,KAAK,YAAY,MAAM,KAAK,OAAO,KAAK,UAAU,MAAM,YAAY,MAAM,YAAY,aAAa,WAAW,MAAM,YAAY,MAAM,YAAY,OAAO,YAAY,OAAO,YAAY,MAAM,OAAO,YAAY,MAAM,OAAO,YAAY,OAAO,YAAY,0BAA0B,aAAa,MAAM,YAAY,aAAa,OAAO,aAAa,aAAa,MAAM,YAAY,aAAa,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,MAAM,oBAAoB,aAAa,0BAA0B,aAAa,0BAA0B,aAAa,OAAO,YAAY,OAAO,YAAY,0BAA0B,aAAa,SAAS,YAAY,OAAO,YAAY,QAAQ,YAAY,OAAO,YAAY,0BAA0B,aAAa,MAAM,YAAY,aAAa,OAAO,YAAY,0BAA0B,aAAa,MAAM,YAAY,aAAa,OAAO,YAAY,0BAA0B,aAAa,MAAM,YAAY,aAAa,OAAO,YAAY,0BAA0B,aAAa,0BAA0B,aAAa,MAAM,YAAY,aAAa,OAAO,YAAY,MAAM,YAAY,aAAa,aAAa,OAAO,YAAY,MAAM,YAAY,aAAa,OAAO,aAAa,aAAa,MAAM,YAAY,aAAa,aAAa,OAAO,QAAQ,KAAK,KAAK,YAAY,aAAa,OAAO,MAAM,YAAY,OAAO,YAAY,OAAO,YAAY,OAAO,YAAY,MAAM,YAAY,aAAa,OAAO,YAAY,MAAM,YAAY,aAAa,yiCAAyiC,qCAAqC,2CAA2C,GAAG,uFAAuF,qCAAqC,iBAAiB,GAAG,wCAAwC,sCAAsC,4CAA4C,gCAAgC,wGAAwG,gCAAgC,sPAAsP,oCAAoC,8FAA8F,yCAAyC,iJAAiJ,0QAA0Q,GAAG,kDAAkD,gJAAgJ,GAAG,oHAAoH,sDAAsD,sBAAsB,gBAAgB,GAAG,iGAAiG,8CAA8C,GAAG,+IAA+I,yCAAyC,GAAG,uJAAuJ,yCAAyC,GAAG,sKAAsK,yCAAyC,GAAG,gFAAgF,qCAAqC,yEAAyE,uDAAuD,2CAA2C,GAAG,sHAAsH,kCAAkC,uBAAuB,GAAG,0GAA0G,kCAAkC,GAAG,kHAAkH,gCAAgC,4FAA4F,qCAAqC,0EAA0E,qCAAqC,iHAAiH,uCAAuC,GAAG,4EAA4E,oBAAoB,uLAAuL,yCAAyC,GAAG,sJAAsJ,yCAAyC,GAAG,uEAAuE,oCAAoC,4EAA4E,iCAAiC,sBAAsB,GAAG,0EAA0E,mCAAmC,kGAAkG,iCAAiC,sBAAsB,GAAG,gGAAgG,oCAAoC,+GAA+G,iCAAiC,sBAAsB,GAAG,iGAAiG,mCAAmC,qFAAqF,gCAAgC,iFAAiF,sCAAsC,gCAAgC,GAAG,+EAA+E,yCAAyC,gCAAgC,sBAAsB,GAAG,wEAAwE,sCAAsC,gCAAgC,GAAG,sHAAsH,+CAA+C,2CAA2C,sBAAsB,GAAG,wQAAwQ,iDAAiD,2CAA2C,GAAG,4EAA4E,0CAA0C,GAAG,8IAA8I,wCAAwC,GAAG,sHAAsH,2CAA2C,sBAAsB,GAAG,0FAA0F,kCAAkC,sBAAsB,GAAG,qBAAqB;AACxkjB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;ACP1B;;AAEb;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA,gDAAgD;AAChD;;AAEA;AACA,qFAAqF;AACrF;;AAEA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,KAAK;AACL,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACrGa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA,MAAqF;AACrF,MAA2E;AAC3E,MAAkF;AAClF,MAAqG;AACrG,MAA8F;AAC9F,MAA8F;AAC9F,MAA0F;AAC1F;AACA;;AAEA;;AAEA,4BAA4B,wFAAmB;AAC/C,wBAAwB,qGAAa;;AAErC,uBAAuB,0FAAa;AACpC;AACA,iBAAiB,kFAAM;AACvB,6BAA6B,yFAAkB;;AAE/C,aAAa,6FAAG,CAAC,0EAAO;;;;AAIoC;AAC5D,OAAO,iEAAe,0EAAO,IAAI,iFAAc,GAAG,iFAAc,YAAY,EAAC;;;;;;;;;;;AC1BhE;;AAEb;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/codemirror/theme/abbott.css","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/css-loader/dist/runtime/api.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/codemirror/theme/abbott.css?b765","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/style-loader/dist/runtime/styleTagTransform.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n * abbott.css\\n * A warm, dark theme for prose and code, with pastels and pretty greens.\\n *\\n * Ported from abbott.vim (https://github.com/bcat/abbott.vim) version 2.1.\\n * Original design and CodeMirror port by Jonathan Rascher.\\n *\\n * This theme shares the following color palette with the Vim color scheme.\\n *\\n * Brown shades:\\n *   bistre: #231c14\\n *   chocolate: #3c3022\\n *   cocoa: #745d42\\n *   vanilla_cream: #fef3b4\\n *\\n * Red shades:\\n *   crimson: #d80450\\n *   cinnabar: #f63f05\\n *\\n * Green shades:\\n *   dark_olive: #273900\\n *   forest_green: #24a507\\n *   chartreuse: #a0ea00\\n *   pastel_chartreuse: #d8ff84\\n *\\n * Yellow shades:\\n *   marigold: #fbb32f\\n *   lemon_meringue: #fbec5d\\n *\\n * Blue shades:\\n *   cornflower_blue: #3f91f1\\n *   periwinkle_blue: #8ccdf0\\n *\\n * Magenta shades:\\n *   french_pink: #ec6c99\\n *   lavender: #e6a2f3\\n *\\n * Cyan shades:\\n *   zomp: #39a78d\\n *   seafoam_green: #00ff7f\\n */\\n\\n/* Style the UI: */\\n\\n/* Equivalent to Vim's Normal group. */\\n.cm-s-abbott.CodeMirror {\\n  background: #231c14 /* bistre */;\\n  color: #d8ff84 /* pastel_chartreuse */;\\n}\\n\\n/* Roughly equivalent to Vim's LineNr group. */\\n.cm-s-abbott .CodeMirror-gutters {\\n  background: #231c14 /* bistre */;\\n  border: none;\\n}\\n.cm-s-abbott .CodeMirror-linenumber { color: #fbec5d /* lemon_meringue */; }\\n\\n.cm-s-abbott .CodeMirror-guttermarker { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's FoldColumn group. */\\n.cm-s-abbott .CodeMirror-guttermarker-subtle { color: #fbb32f /* marigold */; }\\n\\n/*\\n * Roughly equivalent to Vim's CursorColumn group. (We use a brighter color\\n * since Vim's cursorcolumn option highlights a whole column, whereas\\n * CodeMirror's rule just highlights a thin line.)\\n */\\n.cm-s-abbott .CodeMirror-ruler { border-color: #745d42 /* cocoa */; }\\n\\n/* Equivalent to Vim's Cursor group in insert mode. */\\n.cm-s-abbott .CodeMirror-cursor { border-color: #a0ea00 /* chartreuse */; }\\n\\n/* Equivalent to Vim's Cursor group in normal mode. */\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursor,\\n.cm-s-abbott .cm-animate-fat-cursor {\\n  /*\\n   * CodeMirror doesn't allow changing the foreground color of the character\\n   * under the cursor, so we can't use a reverse video effect for the cursor.\\n   * Instead, make it semitransparent.\\n   */\\n  background: rgba(160, 234, 0, 0.5) /* chartreuse */;\\n}\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursors {\\n  /*\\n   * Boost the z-index so the fat cursor shows up on top of text and\\n   * matchingbracket/matchingtag highlights.\\n   */\\n  z-index: 3;\\n}\\n\\n/* Equivalent to Vim's Cursor group in replace mode. */\\n.cm-s-abbott .CodeMirror-overwrite .CodeMirror-cursor {\\n  border-bottom: 1px solid #a0ea00 /* chartreuse */;\\n  border-left: none;\\n  width: auto;\\n}\\n\\n/* Roughly equivalent to Vim's CursorIM group. */\\n.cm-s-abbott .CodeMirror-secondarycursor {\\n  border-color: #00ff7f /* seafoam_green */;\\n}\\n\\n/* Roughly equivalent to Vim's Visual group. */\\n.cm-s-abbott .CodeMirror-selected,\\n.cm-s-abbott.CodeMirror-focused .CodeMirror-selected {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::selection,\\n.cm-s-abbott .CodeMirror-line > span::selection,\\n.cm-s-abbott .CodeMirror-line > span > span::selection {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span > span::-moz-selection {\\n  background: #273900 /* dark_olive */;\\n}\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott .cm-tab { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Search group. */\\n.cm-s-abbott .cm-searching {\\n  background: #fef3b4 /* vanilla_cream */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n/* Style syntax highlighting modes: */\\n\\n/* Equivalent to Vim's Comment group. */\\n.cm-s-abbott span.cm-comment {\\n  color: #fbb32f /* marigold */;\\n  font-style: italic;\\n}\\n\\n/* Equivalent to Vim's String group. */\\n.cm-s-abbott span.cm-string,\\n.cm-s-abbott span.cm-string-2 {\\n  color: #e6a2f3 /* lavender */;\\n}\\n\\n/* Equivalent to Vim's Constant group. */\\n.cm-s-abbott span.cm-number,\\n.cm-s-abbott span.cm-string.cm-url { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott span.cm-invalidchar { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Special group. */\\n.cm-s-abbott span.cm-atom { color: #fef3b4 /* vanilla_cream */; }\\n\\n/* Equivalent to Vim's Delimiter group. */\\n.cm-s-abbott span.cm-bracket,\\n.cm-s-abbott span.cm-punctuation {\\n  color: #fef3b4 /* vanilla_cream */;\\n}\\n\\n/* Equivalent Vim's Operator group. */\\n.cm-s-abbott span.cm-operator { font-weight: bold; }\\n\\n/* Roughly equivalent to Vim's Identifier group. */\\n.cm-s-abbott span.cm-def,\\n.cm-s-abbott span.cm-variable,\\n.cm-s-abbott span.cm-variable-2,\\n.cm-s-abbott span.cm-variable-3 {\\n  color: #8ccdf0 /* periwinkle_blue */;\\n}\\n\\n/* Roughly equivalent to Vim's Function group. */\\n.cm-s-abbott span.cm-builtin,\\n.cm-s-abbott span.cm-property,\\n.cm-s-abbott span.cm-qualifier {\\n  color: #3f91f1 /* cornflower_blue */;\\n}\\n\\n/* Equivalent to Vim's Type group. */\\n.cm-s-abbott span.cm-type { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's Keyword group. */\\n.cm-s-abbott span.cm-keyword {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's PreProc group. */\\n.cm-s-abbott span.cm-meta { color: #ec6c99 /* french_pink */; }\\n\\n/* Equivalent to Vim's htmlTagName group (linked to Statement). */\\n.cm-s-abbott span.cm-tag {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's htmlArg group (linked to Type). */\\n.cm-s-abbott span.cm-attribute { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's htmlH1, markdownH1, etc. groups (linked to Title). */\\n.cm-s-abbott span.cm-header {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's markdownRule group (linked to PreProc). */\\n.cm-s-abbott span.cm-hr { color: #ec6c99 /* french_pink */; }\\n\\n/* Roughly equivalent to Vim's Underlined group. */\\n.cm-s-abbott span.cm-link { color: #e6a2f3 /* lavender */; }\\n\\n/* Equivalent to Vim's diffRemoved group. */\\n.cm-s-abbott span.cm-negative {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Equivalent to Vim's diffAdded group. */\\n.cm-s-abbott span.cm-positive {\\n  background: #a0ea00 /* chartreuse */;\\n  color: #231c14 /* bistre */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's Error group. */\\n.cm-s-abbott span.cm-error {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Style addons: */\\n\\n/* Equivalent to Vim's MatchParen group. */\\n.cm-s-abbott span.CodeMirror-matchingbracket {\\n  background: #745d42 /* cocoa */ !important;\\n  color: #231c14 /* bistre */ !important;\\n  font-weight: bold;\\n}\\n\\n/*\\n * Roughly equivalent to Vim's Error group. (Vim doesn't seem to have a direct\\n * equivalent in its own matchparen plugin, but many syntax highlighting plugins\\n * mark mismatched brackets as Error.)\\n */\\n.cm-s-abbott span.CodeMirror-nonmatchingbracket {\\n  background: #d80450 /* crimson */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n.cm-s-abbott .CodeMirror-matchingtag,\\n.cm-s-abbott .cm-matchhighlight {\\n  outline: 1px solid #39a78d /* zomp */;\\n}\\n\\n/* Equivalent to Vim's CursorLine group. */\\n.cm-s-abbott .CodeMirror-activeline-background,\\n.cm-s-abbott .CodeMirror-activeline-gutter {\\n  background: #3c3022 /* chocolate */;\\n}\\n\\n/* Equivalent to Vim's CursorLineNr group. */\\n.cm-s-abbott .CodeMirror-activeline-gutter .CodeMirror-linenumber {\\n  color: #d8ff84 /* pastel_chartreuse */;\\n  font-weight: bold;\\n}\\n\\n/* Roughly equivalent to Vim's Folded group. */\\n.cm-s-abbott .CodeMirror-foldmarker {\\n  color: #f63f05 /* cinnabar */;\\n  text-shadow: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/codemirror/theme/abbott.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwCE;;AAEF,kBAAkB;;AAElB,sCAAsC;AACtC;EACE,gCAAgC;EAChC,sCAAsC;AACxC;;AAEA,8CAA8C;AAC9C;EACE,gCAAgC;EAChC,YAAY;AACd;AACA,sCAAsC,mCAAmC,EAAE;;AAE3E,wCAAwC,6BAA6B,EAAE;;AAEvE,kDAAkD;AAClD,+CAA+C,6BAA6B,EAAE;;AAE9E;;;;EAIE;AACF,iCAAiC,iCAAiC,EAAE;;AAEpE,qDAAqD;AACrD,kCAAkC,sCAAsC,EAAE;;AAE1E,qDAAqD;AACrD;;EAEE;;;;IAIE;EACF,mDAAmD;AACrD;AACA;EACE;;;IAGE;EACF,UAAU;AACZ;;AAEA,sDAAsD;AACtD;EACE,iDAAiD;EACjD,iBAAiB;EACjB,WAAW;AACb;;AAEA,gDAAgD;AAChD;EACE,yCAAyC;AAC3C;;AAEA,8CAA8C;AAC9C;;EAEE,oCAAoC;AACtC;AACA;;;EAGE,oCAAoC;AACtC;AACA;;;EAGE,oCAAoC;AACtC;;AAEA,kDAAkD;AAClD,uBAAuB,kCAAkC,EAAE;;AAE3D,sCAAsC;AACtC;EACE,kDAAkD;EAClD,sCAAsC;AACxC;;AAEA,qCAAqC;;AAErC,uCAAuC;AACvC;EACE,6BAA6B;EAC7B,kBAAkB;AACpB;;AAEA,sCAAsC;AACtC;;EAEE,6BAA6B;AAC/B;;AAEA,wCAAwC;AACxC;qCACqC,6BAA6B,EAAE;;AAEpE,kDAAkD;AAClD,mCAAmC,kCAAkC,EAAE;;AAEvE,uCAAuC;AACvC,4BAA4B,kCAAkC,EAAE;;AAEhE,yCAAyC;AACzC;;EAEE,kCAAkC;AACpC;;AAEA,qCAAqC;AACrC,gCAAgC,iBAAiB,EAAE;;AAEnD,kDAAkD;AAClD;;;;EAIE,oCAAoC;AACtC;;AAEA,gDAAgD;AAChD;;;EAGE,oCAAoC;AACtC;;AAEA,oCAAoC;AACpC,4BAA4B,iCAAiC,EAAE;;AAE/D,uCAAuC;AACvC;EACE,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA,uCAAuC;AACvC,4BAA4B,gCAAgC,EAAE;;AAE9D,iEAAiE;AACjE;EACE,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA,wDAAwD;AACxD,iCAAiC,iCAAiC,EAAE;;AAEpE,2EAA2E;AAC3E;EACE,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA,gEAAgE;AAChE,0BAA0B,gCAAgC,EAAE;;AAE5D,kDAAkD;AAClD,4BAA4B,6BAA6B,EAAE;;AAE3D,2CAA2C;AAC3C;EACE,iCAAiC;EACjC,2BAA2B;AAC7B;;AAEA,yCAAyC;AACzC;EACE,oCAAoC;EACpC,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA,qCAAqC;AACrC;EACE,iCAAiC;EACjC,2BAA2B;AAC7B;;AAEA,kBAAkB;;AAElB,0CAA0C;AAC1C;EACE,0CAA0C;EAC1C,sCAAsC;EACtC,iBAAiB;AACnB;;AAEA;;;;EAIE;AACF;EACE,4CAA4C;EAC5C,sCAAsC;AACxC;;AAEA;;EAEE,qCAAqC;AACvC;;AAEA,0CAA0C;AAC1C;;EAEE,mCAAmC;AACrC;;AAEA,4CAA4C;AAC5C;EACE,sCAAsC;EACtC,iBAAiB;AACnB;;AAEA,8CAA8C;AAC9C;EACE,6BAA6B;EAC7B,iBAAiB;AACnB\",\"sourcesContent\":[\"/*\\n * abbott.css\\n * A warm, dark theme for prose and code, with pastels and pretty greens.\\n *\\n * Ported from abbott.vim (https://github.com/bcat/abbott.vim) version 2.1.\\n * Original design and CodeMirror port by Jonathan Rascher.\\n *\\n * This theme shares the following color palette with the Vim color scheme.\\n *\\n * Brown shades:\\n *   bistre: #231c14\\n *   chocolate: #3c3022\\n *   cocoa: #745d42\\n *   vanilla_cream: #fef3b4\\n *\\n * Red shades:\\n *   crimson: #d80450\\n *   cinnabar: #f63f05\\n *\\n * Green shades:\\n *   dark_olive: #273900\\n *   forest_green: #24a507\\n *   chartreuse: #a0ea00\\n *   pastel_chartreuse: #d8ff84\\n *\\n * Yellow shades:\\n *   marigold: #fbb32f\\n *   lemon_meringue: #fbec5d\\n *\\n * Blue shades:\\n *   cornflower_blue: #3f91f1\\n *   periwinkle_blue: #8ccdf0\\n *\\n * Magenta shades:\\n *   french_pink: #ec6c99\\n *   lavender: #e6a2f3\\n *\\n * Cyan shades:\\n *   zomp: #39a78d\\n *   seafoam_green: #00ff7f\\n */\\n\\n/* Style the UI: */\\n\\n/* Equivalent to Vim's Normal group. */\\n.cm-s-abbott.CodeMirror {\\n  background: #231c14 /* bistre */;\\n  color: #d8ff84 /* pastel_chartreuse */;\\n}\\n\\n/* Roughly equivalent to Vim's LineNr group. */\\n.cm-s-abbott .CodeMirror-gutters {\\n  background: #231c14 /* bistre */;\\n  border: none;\\n}\\n.cm-s-abbott .CodeMirror-linenumber { color: #fbec5d /* lemon_meringue */; }\\n\\n.cm-s-abbott .CodeMirror-guttermarker { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's FoldColumn group. */\\n.cm-s-abbott .CodeMirror-guttermarker-subtle { color: #fbb32f /* marigold */; }\\n\\n/*\\n * Roughly equivalent to Vim's CursorColumn group. (We use a brighter color\\n * since Vim's cursorcolumn option highlights a whole column, whereas\\n * CodeMirror's rule just highlights a thin line.)\\n */\\n.cm-s-abbott .CodeMirror-ruler { border-color: #745d42 /* cocoa */; }\\n\\n/* Equivalent to Vim's Cursor group in insert mode. */\\n.cm-s-abbott .CodeMirror-cursor { border-color: #a0ea00 /* chartreuse */; }\\n\\n/* Equivalent to Vim's Cursor group in normal mode. */\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursor,\\n.cm-s-abbott .cm-animate-fat-cursor {\\n  /*\\n   * CodeMirror doesn't allow changing the foreground color of the character\\n   * under the cursor, so we can't use a reverse video effect for the cursor.\\n   * Instead, make it semitransparent.\\n   */\\n  background: rgba(160, 234, 0, 0.5) /* chartreuse */;\\n}\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursors {\\n  /*\\n   * Boost the z-index so the fat cursor shows up on top of text and\\n   * matchingbracket/matchingtag highlights.\\n   */\\n  z-index: 3;\\n}\\n\\n/* Equivalent to Vim's Cursor group in replace mode. */\\n.cm-s-abbott .CodeMirror-overwrite .CodeMirror-cursor {\\n  border-bottom: 1px solid #a0ea00 /* chartreuse */;\\n  border-left: none;\\n  width: auto;\\n}\\n\\n/* Roughly equivalent to Vim's CursorIM group. */\\n.cm-s-abbott .CodeMirror-secondarycursor {\\n  border-color: #00ff7f /* seafoam_green */;\\n}\\n\\n/* Roughly equivalent to Vim's Visual group. */\\n.cm-s-abbott .CodeMirror-selected,\\n.cm-s-abbott.CodeMirror-focused .CodeMirror-selected {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::selection,\\n.cm-s-abbott .CodeMirror-line > span::selection,\\n.cm-s-abbott .CodeMirror-line > span > span::selection {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span > span::-moz-selection {\\n  background: #273900 /* dark_olive */;\\n}\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott .cm-tab { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Search group. */\\n.cm-s-abbott .cm-searching {\\n  background: #fef3b4 /* vanilla_cream */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n/* Style syntax highlighting modes: */\\n\\n/* Equivalent to Vim's Comment group. */\\n.cm-s-abbott span.cm-comment {\\n  color: #fbb32f /* marigold */;\\n  font-style: italic;\\n}\\n\\n/* Equivalent to Vim's String group. */\\n.cm-s-abbott span.cm-string,\\n.cm-s-abbott span.cm-string-2 {\\n  color: #e6a2f3 /* lavender */;\\n}\\n\\n/* Equivalent to Vim's Constant group. */\\n.cm-s-abbott span.cm-number,\\n.cm-s-abbott span.cm-string.cm-url { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott span.cm-invalidchar { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Special group. */\\n.cm-s-abbott span.cm-atom { color: #fef3b4 /* vanilla_cream */; }\\n\\n/* Equivalent to Vim's Delimiter group. */\\n.cm-s-abbott span.cm-bracket,\\n.cm-s-abbott span.cm-punctuation {\\n  color: #fef3b4 /* vanilla_cream */;\\n}\\n\\n/* Equivalent Vim's Operator group. */\\n.cm-s-abbott span.cm-operator { font-weight: bold; }\\n\\n/* Roughly equivalent to Vim's Identifier group. */\\n.cm-s-abbott span.cm-def,\\n.cm-s-abbott span.cm-variable,\\n.cm-s-abbott span.cm-variable-2,\\n.cm-s-abbott span.cm-variable-3 {\\n  color: #8ccdf0 /* periwinkle_blue */;\\n}\\n\\n/* Roughly equivalent to Vim's Function group. */\\n.cm-s-abbott span.cm-builtin,\\n.cm-s-abbott span.cm-property,\\n.cm-s-abbott span.cm-qualifier {\\n  color: #3f91f1 /* cornflower_blue */;\\n}\\n\\n/* Equivalent to Vim's Type group. */\\n.cm-s-abbott span.cm-type { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's Keyword group. */\\n.cm-s-abbott span.cm-keyword {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's PreProc group. */\\n.cm-s-abbott span.cm-meta { color: #ec6c99 /* french_pink */; }\\n\\n/* Equivalent to Vim's htmlTagName group (linked to Statement). */\\n.cm-s-abbott span.cm-tag {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's htmlArg group (linked to Type). */\\n.cm-s-abbott span.cm-attribute { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's htmlH1, markdownH1, etc. groups (linked to Title). */\\n.cm-s-abbott span.cm-header {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's markdownRule group (linked to PreProc). */\\n.cm-s-abbott span.cm-hr { color: #ec6c99 /* french_pink */; }\\n\\n/* Roughly equivalent to Vim's Underlined group. */\\n.cm-s-abbott span.cm-link { color: #e6a2f3 /* lavender */; }\\n\\n/* Equivalent to Vim's diffRemoved group. */\\n.cm-s-abbott span.cm-negative {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Equivalent to Vim's diffAdded group. */\\n.cm-s-abbott span.cm-positive {\\n  background: #a0ea00 /* chartreuse */;\\n  color: #231c14 /* bistre */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's Error group. */\\n.cm-s-abbott span.cm-error {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Style addons: */\\n\\n/* Equivalent to Vim's MatchParen group. */\\n.cm-s-abbott span.CodeMirror-matchingbracket {\\n  background: #745d42 /* cocoa */ !important;\\n  color: #231c14 /* bistre */ !important;\\n  font-weight: bold;\\n}\\n\\n/*\\n * Roughly equivalent to Vim's Error group. (Vim doesn't seem to have a direct\\n * equivalent in its own matchparen plugin, but many syntax highlighting plugins\\n * mark mismatched brackets as Error.)\\n */\\n.cm-s-abbott span.CodeMirror-nonmatchingbracket {\\n  background: #d80450 /* crimson */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n.cm-s-abbott .CodeMirror-matchingtag,\\n.cm-s-abbott .cm-matchhighlight {\\n  outline: 1px solid #39a78d /* zomp */;\\n}\\n\\n/* Equivalent to Vim's CursorLine group. */\\n.cm-s-abbott .CodeMirror-activeline-background,\\n.cm-s-abbott .CodeMirror-activeline-gutter {\\n  background: #3c3022 /* chocolate */;\\n}\\n\\n/* Equivalent to Vim's CursorLineNr group. */\\n.cm-s-abbott .CodeMirror-activeline-gutter .CodeMirror-linenumber {\\n  color: #d8ff84 /* pastel_chartreuse */;\\n  font-weight: bold;\\n}\\n\\n/* Roughly equivalent to Vim's Folded group. */\\n.cm-s-abbott .CodeMirror-foldmarker {\\n  color: #f63f05 /* cinnabar */;\\n  text-shadow: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./abbott.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./abbott.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;"],"names":[],"sourceRoot":""}